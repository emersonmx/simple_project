global !p
from snippet_helper.common import get_class_name
from snippet_helper.php import *
endglobal

snippet clc "Class with constructor, fields, getters and setter" b
class `!p snip.rv = get_class_name(snip)` {
`!p
args = get_args(t[1])
if len(args) == 0:
	snip.rv = ""
write_fields(args, snip)
if len(args) > 0:
	snip += ""`
	public function __construct($1) { `!p
args = get_args(t[1])
write_construct_body(args, snip)
snip += "}"`$0
`!p
args = get_args(t[1])
if len(args) == 0:
	snip.rv = ""
write_getter_setter(args, snip)
snip += "}"`
endsnippet

snippet clc "Class with constructor, with field names" b
class `!p
snip.rv = get_class_name(snip)` {
`!p
args = get_args(t[1])
if len(args) == 0:
	snip.rv = ""
write_fields(args, snip)
if len(args) > 0:
	snip += ""`
	public function __construct($1) { `!p
args = get_args(t[1])
write_construct_body(args, snip)
snip += "}"`$0`!p
snip << 1
snip += "\n}"`
endsnippet

snippet clc "Class and constructor" b
class `!p
snip.rv = get_class_name(snip)` {

	public function __construct($1) {
		$0
	}

}
endsnippet

snippet cle "Class extends" b
class ${1:`!p
snip.rv = get_class_name(snip)`} ${2:extends ${3:Parent} }${4:implements ${5:Interface} }{

	$0

}
endsnippet

snippet ine "Interface extends" b
interface ${1:`!p snip.rv = get_class_name(snip)`} extends ${2:Parent} {

	$0

}
endsnippet

snippet ini "Interface implements" b
interface ${1:`!p snip.rv = get_class_name(snip)`} implements ${2:Parent} {

	$0

}
endsnippet

snippet cn "Constructor and assigments" b
public function __construct($1) { `!p
snip << 1
args = get_args(t[1])
write_construct_body(args, snip)
snip += "}"`$0
endsnippet
